<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAAAnAAAAJwEqCZFPAAAA00lE
        QVRYR+2WOw7CMBBEA1eioUECCj4SCKjhwHw6JKg4DLMO0yDL8m5sV/ukp2TTzCSxJXeO4ySYwCUchcnO
        DE77Wx0LeIfHMNnYwivchcmAhD9+Vy0SfoMXOOgrWkoUCyeaEsXDSU6JauEkVaJ6OImVaBZOWOIAN7Bp
        OJHwJ3zBM2waLsibv+EHnuRBS/jP5c0lPHeLFiG24GILswqp1V69RM5Wq1ZCs8+Ll9CEk2IlLOFkcAk5
        ychhwhJOWGIVJiVyjNrDcZjsrOG8v3Uc55+u+wIOhzP7g6DREAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAAAnAAAAJwEqCZFPAAAA00lE
        QVRYR+2WOw7CMBBEA1eioUECCj4SCKjhwHw6JKg4DLMO0yDL8m5sV/ukp2TTzCSxJXeO4ySYwCUchcnO
        DE77Wx0LeIfHMNnYwivchcmAhD9+Vy0SfoMXOOgrWkoUCyeaEsXDSU6JauEkVaJ6OImVaBZOWOIAN7Bp
        OJHwJ3zBM2waLsibv+EHnuRBS/jP5c0lPHeLFiG24GILswqp1V69RM5Wq1ZCs8+Ll9CEk2IlLOFkcAk5
        ychhwhJOWGIVJiVyjNrDcZjsrOG8v3Uc55+u+wIOhzP7g6DREAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>